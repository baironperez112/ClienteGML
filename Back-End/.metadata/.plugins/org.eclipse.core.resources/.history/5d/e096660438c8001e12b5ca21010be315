package com.gml.cliente.serviceImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gml.cliente.dto.ApiResponseCode;
import com.gml.cliente.exceptions.AplicationException;
import com.gml.cliente.exceptions.ConflictExceptions;
import com.gml.cliente.exceptions.NotFoundException;
import com.gml.cliente.model.ClienteEntity;
import com.gml.cliente.repository.ClienteRepository;
import com.gml.cliente.service.ClienteService;

@Service
public class ClienteServiceImpl implements ClienteService {

	@Autowired
	private ClienteRepository clienteRepository;
	
	 
	@Override
	public List<ClienteEntity> finAllCliente() {
		return clienteRepository.findAll();
	}

	@Override
	public ClienteEntity findBySharedKey(String sharedKey) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ClienteEntity saveCliente(ClienteEntity clienteEntity) {
		if(clienteRepository.existsById(clienteEntity.getSharedKey())) {
			throw new ConflictExceptions(ApiResponseCode.ERROR_REGISTRO_EXISTENTE.getDescription());
		} else {
			return clienteRepository.save(clienteEntity);
		}
	}

	@Override
	public void deleteCliente(String clienteEntity) {
		if(clienteEntity != null) {
			try {
				clienteRepository.findById(clienteEntity)
					.orElseThrow(() -> new NotFoundException(clienteEntity, clienteEntity));
			} 
			catch (Exception e) {
				throw new AplicationException(ApiResponseCode.GENERIC_ERROR.getCode(),
						ApiResponseCode.GENERIC_ERROR.getDescription(),
						ApiResponseCode.GENERIC_ERROR.getHttpStatus());
			}
		} else {
			throw new AplicationException(ApiResponseCode.ERROR_PARAMETRO_NOT_FOUND.getCode(),
					ApiResponseCode.ERROR_PARAMETRO_NOT_FOUND.getDescription(),
					ApiResponseCode.ERROR_PARAMETRO_NOT_FOUND.getHttpStatus());
		}
		
	}

}
